using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;
using UnityEngine.Tilemaps;

public static class GameObjects
{
    private static Dictionary<string, Tilemap> tilemaps = new Dictionary<string, Tilemap>();
    private static Dictionary<string, GameObject> prefabs = new Dictionary<string, GameObject>();
    public static Tilemap solidLayer;
    public static GameObject empty;
    public static GameObject player;
    public static GameObject exit;
    public static GameObject blueShot;
    public static GameObject redSmallShot;
    public static GameObject fireSwarmShot;
    public static GameObject time;
    public static GameObject speed;
    public static GameObject frequency;
    public static GameObject mass;
    public static GameObject length;
    public static GameObject purpleEnemy;
    public static GameObject healthBarStandard;
    public static GameObject redSmallEnemy;
    public static GameObject slot;
    public static GameObject unitAnimation;
    public static GameObject text;
    public static GameObject slingshot;
    public static GameObject sling;
    public static GameObject blowgun;
    public static GameObject baseHouse;
    public static GameObject craftable;
    public static GameObject crumblingRock;
    public static GameObject burningRock;
    public static GameObject scroll;
    public static GameObject area;
    public static GameObject volume;
    public static GameObject inertia;
    public static GameObject craftingScroll;
    public static GameObject medkit;
    public static GameObject basicArmor;
    public static GameObject block;
    public static GameObject blackShot;
    public static GameObject blowgunShot;
    public static GameObject boss1;
    public static GameObject shootingEnemy;
    public static GameObject pebble;
    public static GameObject justBlock;
    public static TileBase wallTile;
    public static GameObject bandage;
    public static GameObject boss2;
    public static GameObject swarmEnemy;
    public static GameObject density;
    public static GameObject acceleration;
    public static GameObject leatherArmor;
    public static GameObject force;
    public static GameObject speedUp;
    public static GameObject fastReload;
    public static GameObject finalBoss;
    public static GameObject acceleratedHealing;
    public static GameObject portal;

    public static void SetPrefabs(GameObject _portal, GameObject _finalBoss, GameObject _acceleratedHealing, GameObject _fastReload, GameObject _speedUp, GameObject _leatherArmor, GameObject _force, GameObject _acceleration, GameObject _density, GameObject _swarmEnemy, GameObject _boss2, GameObject _bandage, GameObject _justBlock, GameObject _pebble, GameObject _blackshot, GameObject _blowgunShot, GameObject _boss1, GameObject _shootingEnemy, GameObject _block, GameObject _basicArmor, GameObject _medkit, GameObject _craftingScroll, GameObject _inertia, GameObject _volume, GameObject _area, GameObject _scroll, GameObject _burningRock, GameObject _crumblingRock, GameObject _craftable, GameObject _baseHouse, GameObject _sling, GameObject _blowgun, GameObject _slingshot, GameObject _counter, GameObject _unitAnimation, GameObject _slot, GameObject _speed, GameObject _frequency, GameObject _mass, GameObject _length, GameObject _redSmallEnemy, GameObject _healthBarStandard, GameObject _purpleEnemy, GameObject _time, GameObject _redSmallShot, GameObject _fireSwarmShot, GameObject _exit, GameObject _empty, GameObject _player, GameObject _blueShot, Tilemap _solidLayer, TileBase _wallTile)
    {
        tilemaps.Add(_solidLayer.name, _solidLayer);
        prefabs.Add(_empty.name, _empty);
        prefabs.Add(_exit.name, _exit);
        prefabs.Add(_player.name, _player);
        prefabs.Add(_blueShot.name, _blueShot);
        prefabs.Add(_redSmallShot.name, _redSmallShot);
        prefabs.Add(_fireSwarmShot.name, _fireSwarmShot);
        prefabs.Add(_healthBarStandard.name, _healthBarStandard);
        prefabs.Add(_redSmallEnemy.name, _redSmallEnemy);
        prefabs.Add(_speed.name, _speed);
        prefabs.Add(_frequency.name, _frequency);
        prefabs.Add(_mass.name, _mass);
        prefabs.Add(_length.name, _length);
        prefabs.Add(_slot.name, _slot);
        prefabs.Add(_time.name, _time);
        prefabs.Add(_unitAnimation.name, _unitAnimation);
        prefabs.Add(_counter.name, _counter);
        prefabs.Add(_slingshot.name, _slingshot);
        prefabs.Add(_blowgun.name, _blowgun);
        prefabs.Add(_sling.name, _sling);
        prefabs.Add(_baseHouse.name, _baseHouse);
        prefabs.Add(_purpleEnemy.name, _purpleEnemy);
        prefabs.Add(_craftable.name, _craftable);
        prefabs.Add(_crumblingRock.name, _crumblingRock);
        prefabs.Add(_burningRock.name, _burningRock);
        prefabs.Add(_scroll.name, _scroll);
        prefabs.Add(_area.name, _area);
        prefabs.Add(_volume.name, _volume);
        prefabs.Add(_inertia.name, _inertia);
        prefabs.Add(_craftingScroll.name, _craftingScroll);
        prefabs.Add(_medkit.name, _medkit);
        prefabs.Add(_basicArmor.name, _basicArmor);
        prefabs.Add(_block.name, _block);
        prefabs.Add(_blackshot.name, _blackshot);
        prefabs.Add(_blowgunShot.name, _blowgunShot);
        prefabs.Add(_boss1.name, _boss1);
        prefabs.Add(_shootingEnemy.name, _shootingEnemy);
        prefabs.Add(_pebble.name, _pebble);
        prefabs.Add(_justBlock.name, _justBlock);
        prefabs.Add(_bandage.name, _bandage);
        prefabs.Add(_boss2.name, _boss2);
        prefabs.Add(_swarmEnemy.name, _swarmEnemy);
        prefabs.Add(_density.name, _density);
        prefabs.Add(_acceleration.name, _acceleration);
        prefabs.Add(_force.name, _force);
        prefabs.Add(_leatherArmor.name, _leatherArmor);
        prefabs.Add(_speedUp.name, _speedUp);
        prefabs.Add(_fastReload.name, _fastReload);
        prefabs.Add(_acceleratedHealing.name, _acceleratedHealing);
        prefabs.Add(_finalBoss.name, _finalBoss);
        prefabs.Add(_portal.name, _portal);
        portal = _portal;
        finalBoss = _finalBoss;
        acceleratedHealing = _acceleratedHealing;
        fastReload = _fastReload;
        speedUp = _speedUp;
        leatherArmor = _leatherArmor;
        force = _force;
        acceleration = _acceleration;
        density = _density;
        swarmEnemy = _swarmEnemy;
        boss2 = _boss2;
        bandage = _bandage;
        justBlock = _justBlock;
        wallTile = _wallTile;
        pebble = _pebble;
        shootingEnemy = _shootingEnemy;
        boss1 = _boss1;
        blowgunShot = _blowgunShot;
        blackShot = _blackshot;
        block = _block;
        basicArmor = _basicArmor;
        medkit = _medkit;
        craftingScroll = _craftingScroll;
        inertia = _inertia;
        volume = _volume;
        area = _area;
        scroll = _scroll;
        burningRock = _burningRock;
        crumblingRock = _crumblingRock;
        craftable = _craftable;
        baseHouse = _baseHouse;
        sling = _sling;
        blowgun = _blowgun;
        slingshot = _slingshot;
        text = _counter;
        unitAnimation = _unitAnimation;
        slot = _slot;
        healthBarStandard = _healthBarStandard;
        redSmallShot = _redSmallShot;
        fireSwarmShot = _fireSwarmShot;
        empty = _empty;
        exit = _exit;
        player = _player;
        blueShot = _blueShot;
        solidLayer = _solidLayer;
        time = _time;
        purpleEnemy = _purpleEnemy;
        redSmallEnemy = _redSmallEnemy;
        speed = _speed;
        frequency = _frequency;
        mass = _mass;
        length = _length;
    }
    public static GameObject GetPrefabByName(string name)
    {
        return prefabs[name.Split("(Clone)")[0]];
    }
    public static Tilemap GetTilemapByName(string name)
    {
        return tilemaps[name.Split("(Clone)")[0]];
    }

}

